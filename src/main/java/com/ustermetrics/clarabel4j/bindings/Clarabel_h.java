// Generated by jextract

package com.ustermetrics.clarabel4j.bindings;

import org.scijava.nativelib.NativeLoader;

import java.io.IOException;
import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class Clarabel_h extends Clarabel_h$shared {

    Clarabel_h() {
        // Should not be called directly
    }

    static {
        try {
            NativeLoader.loadLibrary("clarabel_c");
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    static final Arena LIBRARY_ARENA = Arena.ofAuto();

    static final SymbolLookup SYMBOL_LOOKUP = SymbolLookup.loaderLookup()
            .or(Linker.nativeLinker().defaultLookup());

    /**
     * {@snippet lang=c :
     * typedef double ClarabelFloat
     * }
     */
    public static final OfDouble ClarabelFloat = Clarabel_h.C_DOUBLE;

    private static class clarabel_CscMatrix_f64_init {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG,
            Clarabel_h.C_LONG_LONG,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_CscMatrix_f64_init");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_CscMatrix_f64_init(ClarabelCscMatrix_f64 *ptr, uintptr_t m, uintptr_t n, const uintptr_t *colptr, const uintptr_t *rowval, const double *nzval)
     * }
     */
    public static FunctionDescriptor clarabel_CscMatrix_f64_init$descriptor() {
        return clarabel_CscMatrix_f64_init.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_CscMatrix_f64_init(ClarabelCscMatrix_f64 *ptr, uintptr_t m, uintptr_t n, const uintptr_t *colptr, const uintptr_t *rowval, const double *nzval)
     * }
     */
    public static MethodHandle clarabel_CscMatrix_f64_init$handle() {
        return clarabel_CscMatrix_f64_init.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_CscMatrix_f64_init(ClarabelCscMatrix_f64 *ptr, uintptr_t m, uintptr_t n, const uintptr_t *colptr, const uintptr_t *rowval, const double *nzval)
     * }
     */
    public static MemorySegment clarabel_CscMatrix_f64_init$address() {
        return clarabel_CscMatrix_f64_init.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_CscMatrix_f64_init(ClarabelCscMatrix_f64 *ptr, uintptr_t m, uintptr_t n, const uintptr_t *colptr, const uintptr_t *rowval, const double *nzval)
     * }
     */
    public static void clarabel_CscMatrix_f64_init(MemorySegment ptr, long m, long n, MemorySegment colptr, MemorySegment rowval, MemorySegment nzval) {
        var mh$ = clarabel_CscMatrix_f64_init.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_CscMatrix_f64_init", ptr, m, n, colptr, rowval, nzval);
            }
            mh$.invokeExact(ptr, m, n, colptr, rowval, nzval);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }
    private static final int AUTO = (int)0L;
    /**
     * {@snippet lang=c :
     * enum ClarabelDirectSolveMethods.AUTO = 0
     * }
     */
    public static int AUTO() {
        return AUTO;
    }
    private static final int QDLDL = (int)1L;
    /**
     * {@snippet lang=c :
     * enum ClarabelDirectSolveMethods.QDLDL = 1
     * }
     */
    public static int QDLDL() {
        return QDLDL;
    }
    private static final int FAER = (int)2L;
    /**
     * {@snippet lang=c :
     * enum ClarabelDirectSolveMethods.FAER = 2
     * }
     */
    public static int FAER() {
        return FAER;
    }
    private static final int PARDISO_MKL = (int)3L;
    /**
     * {@snippet lang=c :
     * enum ClarabelDirectSolveMethods.PARDISO_MKL = 3
     * }
     */
    public static int PARDISO_MKL() {
        return PARDISO_MKL;
    }

    private static class clarabel_DefaultSettings_f64_default {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            ClarabelDefaultSettings_f64.layout()    );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSettings_f64_default");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ClarabelDefaultSettings_f64 clarabel_DefaultSettings_f64_default()
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSettings_f64_default$descriptor() {
        return clarabel_DefaultSettings_f64_default.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ClarabelDefaultSettings_f64 clarabel_DefaultSettings_f64_default()
     * }
     */
    public static MethodHandle clarabel_DefaultSettings_f64_default$handle() {
        return clarabel_DefaultSettings_f64_default.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ClarabelDefaultSettings_f64 clarabel_DefaultSettings_f64_default()
     * }
     */
    public static MemorySegment clarabel_DefaultSettings_f64_default$address() {
        return clarabel_DefaultSettings_f64_default.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ClarabelDefaultSettings_f64 clarabel_DefaultSettings_f64_default()
     * }
     */
    public static MemorySegment clarabel_DefaultSettings_f64_default(SegmentAllocator allocator) {
        var mh$ = clarabel_DefaultSettings_f64_default.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSettings_f64_default", allocator);
            }
            return (MemorySegment)mh$.invokeExact(allocator);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }
    private static final int ClarabelUnsolved = (int)0L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelUnsolved = 0
     * }
     */
    public static int ClarabelUnsolved() {
        return ClarabelUnsolved;
    }
    private static final int ClarabelSolved = (int)1L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelSolved = 1
     * }
     */
    public static int ClarabelSolved() {
        return ClarabelSolved;
    }
    private static final int ClarabelPrimalInfeasible = (int)2L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelPrimalInfeasible = 2
     * }
     */
    public static int ClarabelPrimalInfeasible() {
        return ClarabelPrimalInfeasible;
    }
    private static final int ClarabelDualInfeasible = (int)3L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelDualInfeasible = 3
     * }
     */
    public static int ClarabelDualInfeasible() {
        return ClarabelDualInfeasible;
    }
    private static final int ClarabelAlmostSolved = (int)4L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelAlmostSolved = 4
     * }
     */
    public static int ClarabelAlmostSolved() {
        return ClarabelAlmostSolved;
    }
    private static final int ClarabelAlmostPrimalInfeasible = (int)5L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelAlmostPrimalInfeasible = 5
     * }
     */
    public static int ClarabelAlmostPrimalInfeasible() {
        return ClarabelAlmostPrimalInfeasible;
    }
    private static final int ClarabelAlmostDualInfeasible = (int)6L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelAlmostDualInfeasible = 6
     * }
     */
    public static int ClarabelAlmostDualInfeasible() {
        return ClarabelAlmostDualInfeasible;
    }
    private static final int ClarabelMaxIterations = (int)7L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelMaxIterations = 7
     * }
     */
    public static int ClarabelMaxIterations() {
        return ClarabelMaxIterations;
    }
    private static final int ClarabelMaxTime = (int)8L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelMaxTime = 8
     * }
     */
    public static int ClarabelMaxTime() {
        return ClarabelMaxTime;
    }
    private static final int ClarabelNumericalError = (int)9L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelNumericalError = 9
     * }
     */
    public static int ClarabelNumericalError() {
        return ClarabelNumericalError;
    }
    private static final int ClarabelInsufficientProgress = (int)10L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelInsufficientProgress = 10
     * }
     */
    public static int ClarabelInsufficientProgress() {
        return ClarabelInsufficientProgress;
    }
    private static final int ClarabelCallbackTerminated = (int)11L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSolverStatus.ClarabelCallbackTerminated = 11
     * }
     */
    public static int ClarabelCallbackTerminated() {
        return ClarabelCallbackTerminated;
    }
    private static final int ClarabelZeroConeT_Tag = (int)0L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSupportedConeT_Tag.ClarabelZeroConeT_Tag = 0
     * }
     */
    public static int ClarabelZeroConeT_Tag() {
        return ClarabelZeroConeT_Tag;
    }
    private static final int ClarabelNonnegativeConeT_Tag = (int)1L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSupportedConeT_Tag.ClarabelNonnegativeConeT_Tag = 1
     * }
     */
    public static int ClarabelNonnegativeConeT_Tag() {
        return ClarabelNonnegativeConeT_Tag;
    }
    private static final int ClarabelSecondOrderConeT_Tag = (int)2L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSupportedConeT_Tag.ClarabelSecondOrderConeT_Tag = 2
     * }
     */
    public static int ClarabelSecondOrderConeT_Tag() {
        return ClarabelSecondOrderConeT_Tag;
    }
    private static final int ClarabelExponentialConeT_Tag = (int)3L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSupportedConeT_Tag.ClarabelExponentialConeT_Tag = 3
     * }
     */
    public static int ClarabelExponentialConeT_Tag() {
        return ClarabelExponentialConeT_Tag;
    }
    private static final int ClarabelPowerConeT_Tag = (int)4L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSupportedConeT_Tag.ClarabelPowerConeT_Tag = 4
     * }
     */
    public static int ClarabelPowerConeT_Tag() {
        return ClarabelPowerConeT_Tag;
    }
    private static final int ClarabelGenPowerConeT_Tag = (int)5L;
    /**
     * {@snippet lang=c :
     * enum ClarabelSupportedConeT_Tag.ClarabelGenPowerConeT_Tag = 5
     * }
     */
    public static int ClarabelGenPowerConeT_Tag() {
        return ClarabelGenPowerConeT_Tag;
    }

    private static class clarabel_DefaultSolver_f64_new {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_new");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ClarabelDefaultSolver_f64 *clarabel_DefaultSolver_f64_new(const ClarabelCscMatrix_f64 *P, const double *q, const ClarabelCscMatrix_f64 *A, const double *b, uintptr_t n_cones, const ClarabelSupportedConeT_f64 *cones, const ClarabelDefaultSettings_f64 *settings)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_new$descriptor() {
        return clarabel_DefaultSolver_f64_new.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ClarabelDefaultSolver_f64 *clarabel_DefaultSolver_f64_new(const ClarabelCscMatrix_f64 *P, const double *q, const ClarabelCscMatrix_f64 *A, const double *b, uintptr_t n_cones, const ClarabelSupportedConeT_f64 *cones, const ClarabelDefaultSettings_f64 *settings)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_new$handle() {
        return clarabel_DefaultSolver_f64_new.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ClarabelDefaultSolver_f64 *clarabel_DefaultSolver_f64_new(const ClarabelCscMatrix_f64 *P, const double *q, const ClarabelCscMatrix_f64 *A, const double *b, uintptr_t n_cones, const ClarabelSupportedConeT_f64 *cones, const ClarabelDefaultSettings_f64 *settings)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_new$address() {
        return clarabel_DefaultSolver_f64_new.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ClarabelDefaultSolver_f64 *clarabel_DefaultSolver_f64_new(const ClarabelCscMatrix_f64 *P, const double *q, const ClarabelCscMatrix_f64 *A, const double *b, uintptr_t n_cones, const ClarabelSupportedConeT_f64 *cones, const ClarabelDefaultSettings_f64 *settings)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_new(MemorySegment P, MemorySegment q, MemorySegment A, MemorySegment b, long n_cones, MemorySegment cones, MemorySegment settings) {
        var mh$ = clarabel_DefaultSolver_f64_new.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_new", P, q, A, b, n_cones, cones, settings);
            }
            return (MemorySegment)mh$.invokeExact(P, q, A, b, n_cones, cones, settings);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_print_to_stdout {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_print_to_stdout");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_stdout(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_print_to_stdout$descriptor() {
        return clarabel_DefaultSolver_f64_print_to_stdout.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_stdout(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_print_to_stdout$handle() {
        return clarabel_DefaultSolver_f64_print_to_stdout.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_stdout(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_print_to_stdout$address() {
        return clarabel_DefaultSolver_f64_print_to_stdout.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_stdout(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static void clarabel_DefaultSolver_f64_print_to_stdout(MemorySegment solver) {
        var mh$ = clarabel_DefaultSolver_f64_print_to_stdout.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_print_to_stdout", solver);
            }
            mh$.invokeExact(solver);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_print_to_file {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_print_to_file");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_file(ClarabelDefaultSolver_f64 *solver, const char *filename)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_print_to_file$descriptor() {
        return clarabel_DefaultSolver_f64_print_to_file.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_file(ClarabelDefaultSolver_f64 *solver, const char *filename)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_print_to_file$handle() {
        return clarabel_DefaultSolver_f64_print_to_file.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_file(ClarabelDefaultSolver_f64 *solver, const char *filename)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_print_to_file$address() {
        return clarabel_DefaultSolver_f64_print_to_file.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_file(ClarabelDefaultSolver_f64 *solver, const char *filename)
     * }
     */
    public static void clarabel_DefaultSolver_f64_print_to_file(MemorySegment solver, MemorySegment filename) {
        var mh$ = clarabel_DefaultSolver_f64_print_to_file.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_print_to_file", solver, filename);
            }
            mh$.invokeExact(solver, filename);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_print_to_buffer {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_print_to_buffer");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_buffer(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_print_to_buffer$descriptor() {
        return clarabel_DefaultSolver_f64_print_to_buffer.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_buffer(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_print_to_buffer$handle() {
        return clarabel_DefaultSolver_f64_print_to_buffer.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_buffer(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_print_to_buffer$address() {
        return clarabel_DefaultSolver_f64_print_to_buffer.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_print_to_buffer(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static void clarabel_DefaultSolver_f64_print_to_buffer(MemorySegment solver) {
        var mh$ = clarabel_DefaultSolver_f64_print_to_buffer.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_print_to_buffer", solver);
            }
            mh$.invokeExact(solver);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_get_print_buffer {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_get_print_buffer");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * const char *clarabel_DefaultSolver_f64_get_print_buffer(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_get_print_buffer$descriptor() {
        return clarabel_DefaultSolver_f64_get_print_buffer.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * const char *clarabel_DefaultSolver_f64_get_print_buffer(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_get_print_buffer$handle() {
        return clarabel_DefaultSolver_f64_get_print_buffer.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * const char *clarabel_DefaultSolver_f64_get_print_buffer(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_get_print_buffer$address() {
        return clarabel_DefaultSolver_f64_get_print_buffer.ADDR;
    }

    /**
     * {@snippet lang=c :
     * const char *clarabel_DefaultSolver_f64_get_print_buffer(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_get_print_buffer(MemorySegment solver) {
        var mh$ = clarabel_DefaultSolver_f64_get_print_buffer.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_get_print_buffer", solver);
            }
            return (MemorySegment)mh$.invokeExact(solver);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_free_print_buffer {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_free_print_buffer");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_free_print_buffer(const char *buffer)
     * }
     */
    public static FunctionDescriptor clarabel_free_print_buffer$descriptor() {
        return clarabel_free_print_buffer.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_free_print_buffer(const char *buffer)
     * }
     */
    public static MethodHandle clarabel_free_print_buffer$handle() {
        return clarabel_free_print_buffer.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_free_print_buffer(const char *buffer)
     * }
     */
    public static MemorySegment clarabel_free_print_buffer$address() {
        return clarabel_free_print_buffer.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_free_print_buffer(const char *buffer)
     * }
     */
    public static void clarabel_free_print_buffer(MemorySegment buffer) {
        var mh$ = clarabel_free_print_buffer.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_free_print_buffer", buffer);
            }
            mh$.invokeExact(buffer);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_solve {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_solve");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_solve(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_solve$descriptor() {
        return clarabel_DefaultSolver_f64_solve.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_solve(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_solve$handle() {
        return clarabel_DefaultSolver_f64_solve.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_solve(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_solve$address() {
        return clarabel_DefaultSolver_f64_solve.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_solve(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static void clarabel_DefaultSolver_f64_solve(MemorySegment solver) {
        var mh$ = clarabel_DefaultSolver_f64_solve.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_solve", solver);
            }
            mh$.invokeExact(solver);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_free {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_free");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_free(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_free$descriptor() {
        return clarabel_DefaultSolver_f64_free.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_free(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_free$handle() {
        return clarabel_DefaultSolver_f64_free.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_free(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_free$address() {
        return clarabel_DefaultSolver_f64_free.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_free(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static void clarabel_DefaultSolver_f64_free(MemorySegment solver) {
        var mh$ = clarabel_DefaultSolver_f64_free.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_free", solver);
            }
            mh$.invokeExact(solver);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_solution {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            ClarabelDefaultSolution_f64.layout(),
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_solution");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ClarabelDefaultSolution_f64 clarabel_DefaultSolver_f64_solution(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_solution$descriptor() {
        return clarabel_DefaultSolver_f64_solution.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ClarabelDefaultSolution_f64 clarabel_DefaultSolver_f64_solution(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_solution$handle() {
        return clarabel_DefaultSolver_f64_solution.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ClarabelDefaultSolution_f64 clarabel_DefaultSolver_f64_solution(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_solution$address() {
        return clarabel_DefaultSolver_f64_solution.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ClarabelDefaultSolution_f64 clarabel_DefaultSolver_f64_solution(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_solution(SegmentAllocator allocator, MemorySegment solver) {
        var mh$ = clarabel_DefaultSolver_f64_solution.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_solution", allocator, solver);
            }
            return (MemorySegment)mh$.invokeExact(allocator, solver);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_info {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            ClarabelDefaultInfo_f64.layout(),
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_info");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ClarabelDefaultInfo_f64 clarabel_DefaultSolver_f64_info(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_info$descriptor() {
        return clarabel_DefaultSolver_f64_info.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ClarabelDefaultInfo_f64 clarabel_DefaultSolver_f64_info(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_info$handle() {
        return clarabel_DefaultSolver_f64_info.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ClarabelDefaultInfo_f64 clarabel_DefaultSolver_f64_info(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_info$address() {
        return clarabel_DefaultSolver_f64_info.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ClarabelDefaultInfo_f64 clarabel_DefaultSolver_f64_info(ClarabelDefaultSolver_f64 *solver)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_info(SegmentAllocator allocator, MemorySegment solver) {
        var mh$ = clarabel_DefaultSolver_f64_info.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_info", allocator, solver);
            }
            return (MemorySegment)mh$.invokeExact(allocator, solver);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_P {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_P");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P(ClarabelDefaultSolver_f64 *solver, const double *Pnzval, uintptr_t nnzP)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_P$descriptor() {
        return clarabel_DefaultSolver_f64_update_P.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P(ClarabelDefaultSolver_f64 *solver, const double *Pnzval, uintptr_t nnzP)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_P$handle() {
        return clarabel_DefaultSolver_f64_update_P.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P(ClarabelDefaultSolver_f64 *solver, const double *Pnzval, uintptr_t nnzP)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_P$address() {
        return clarabel_DefaultSolver_f64_update_P.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P(ClarabelDefaultSolver_f64 *solver, const double *Pnzval, uintptr_t nnzP)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_P(MemorySegment solver, MemorySegment Pnzval, long nnzP) {
        var mh$ = clarabel_DefaultSolver_f64_update_P.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_P", solver, Pnzval, nnzP);
            }
            mh$.invokeExact(solver, Pnzval, nnzP);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_P_partial {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_P_partial");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_P_partial$descriptor() {
        return clarabel_DefaultSolver_f64_update_P_partial.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_P_partial$handle() {
        return clarabel_DefaultSolver_f64_update_P_partial.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_P_partial$address() {
        return clarabel_DefaultSolver_f64_update_P_partial.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_P_partial(MemorySegment solver, MemorySegment index, MemorySegment values, long nvals) {
        var mh$ = clarabel_DefaultSolver_f64_update_P_partial.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_P_partial", solver, index, values, nvals);
            }
            mh$.invokeExact(solver, index, values, nvals);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_P_csc {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_P_csc");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P_csc(ClarabelDefaultSolver_f64 *solver, const ClarabelCscMatrix_f64 *P)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_P_csc$descriptor() {
        return clarabel_DefaultSolver_f64_update_P_csc.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P_csc(ClarabelDefaultSolver_f64 *solver, const ClarabelCscMatrix_f64 *P)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_P_csc$handle() {
        return clarabel_DefaultSolver_f64_update_P_csc.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P_csc(ClarabelDefaultSolver_f64 *solver, const ClarabelCscMatrix_f64 *P)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_P_csc$address() {
        return clarabel_DefaultSolver_f64_update_P_csc.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_P_csc(ClarabelDefaultSolver_f64 *solver, const ClarabelCscMatrix_f64 *P)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_P_csc(MemorySegment solver, MemorySegment P) {
        var mh$ = clarabel_DefaultSolver_f64_update_P_csc.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_P_csc", solver, P);
            }
            mh$.invokeExact(solver, P);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_A {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_A");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A(ClarabelDefaultSolver_f64 *solver, const double *Anzval, uintptr_t nnzA)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_A$descriptor() {
        return clarabel_DefaultSolver_f64_update_A.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A(ClarabelDefaultSolver_f64 *solver, const double *Anzval, uintptr_t nnzA)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_A$handle() {
        return clarabel_DefaultSolver_f64_update_A.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A(ClarabelDefaultSolver_f64 *solver, const double *Anzval, uintptr_t nnzA)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_A$address() {
        return clarabel_DefaultSolver_f64_update_A.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A(ClarabelDefaultSolver_f64 *solver, const double *Anzval, uintptr_t nnzA)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_A(MemorySegment solver, MemorySegment Anzval, long nnzA) {
        var mh$ = clarabel_DefaultSolver_f64_update_A.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_A", solver, Anzval, nnzA);
            }
            mh$.invokeExact(solver, Anzval, nnzA);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_A_partial {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_A_partial");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_A_partial$descriptor() {
        return clarabel_DefaultSolver_f64_update_A_partial.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_A_partial$handle() {
        return clarabel_DefaultSolver_f64_update_A_partial.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_A_partial$address() {
        return clarabel_DefaultSolver_f64_update_A_partial.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_A_partial(MemorySegment solver, MemorySegment index, MemorySegment values, long nvals) {
        var mh$ = clarabel_DefaultSolver_f64_update_A_partial.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_A_partial", solver, index, values, nvals);
            }
            mh$.invokeExact(solver, index, values, nvals);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_A_csc {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_A_csc");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A_csc(ClarabelDefaultSolver_f64 *solver, const ClarabelCscMatrix_f64 *A)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_A_csc$descriptor() {
        return clarabel_DefaultSolver_f64_update_A_csc.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A_csc(ClarabelDefaultSolver_f64 *solver, const ClarabelCscMatrix_f64 *A)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_A_csc$handle() {
        return clarabel_DefaultSolver_f64_update_A_csc.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A_csc(ClarabelDefaultSolver_f64 *solver, const ClarabelCscMatrix_f64 *A)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_A_csc$address() {
        return clarabel_DefaultSolver_f64_update_A_csc.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_A_csc(ClarabelDefaultSolver_f64 *solver, const ClarabelCscMatrix_f64 *A)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_A_csc(MemorySegment solver, MemorySegment A) {
        var mh$ = clarabel_DefaultSolver_f64_update_A_csc.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_A_csc", solver, A);
            }
            mh$.invokeExact(solver, A);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_q {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_q");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_q(ClarabelDefaultSolver_f64 *solver, const double *values, uintptr_t n)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_q$descriptor() {
        return clarabel_DefaultSolver_f64_update_q.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_q(ClarabelDefaultSolver_f64 *solver, const double *values, uintptr_t n)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_q$handle() {
        return clarabel_DefaultSolver_f64_update_q.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_q(ClarabelDefaultSolver_f64 *solver, const double *values, uintptr_t n)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_q$address() {
        return clarabel_DefaultSolver_f64_update_q.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_q(ClarabelDefaultSolver_f64 *solver, const double *values, uintptr_t n)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_q(MemorySegment solver, MemorySegment values, long n) {
        var mh$ = clarabel_DefaultSolver_f64_update_q.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_q", solver, values, n);
            }
            mh$.invokeExact(solver, values, n);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_q_partial {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_q_partial");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_q_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_q_partial$descriptor() {
        return clarabel_DefaultSolver_f64_update_q_partial.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_q_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_q_partial$handle() {
        return clarabel_DefaultSolver_f64_update_q_partial.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_q_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_q_partial$address() {
        return clarabel_DefaultSolver_f64_update_q_partial.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_q_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_q_partial(MemorySegment solver, MemorySegment index, MemorySegment values, long nvals) {
        var mh$ = clarabel_DefaultSolver_f64_update_q_partial.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_q_partial", solver, index, values, nvals);
            }
            mh$.invokeExact(solver, index, values, nvals);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_b {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_b");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_b(ClarabelDefaultSolver_f64 *solver, const double *values, uintptr_t n)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_b$descriptor() {
        return clarabel_DefaultSolver_f64_update_b.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_b(ClarabelDefaultSolver_f64 *solver, const double *values, uintptr_t n)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_b$handle() {
        return clarabel_DefaultSolver_f64_update_b.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_b(ClarabelDefaultSolver_f64 *solver, const double *values, uintptr_t n)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_b$address() {
        return clarabel_DefaultSolver_f64_update_b.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_b(ClarabelDefaultSolver_f64 *solver, const double *values, uintptr_t n)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_b(MemorySegment solver, MemorySegment values, long n) {
        var mh$ = clarabel_DefaultSolver_f64_update_b.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_b", solver, values, n);
            }
            mh$.invokeExact(solver, values, n);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class clarabel_DefaultSolver_f64_update_b_partial {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_POINTER,
            Clarabel_h.C_LONG_LONG
        );

        public static final MemorySegment ADDR = SYMBOL_LOOKUP.findOrThrow("clarabel_DefaultSolver_f64_update_b_partial");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_b_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static FunctionDescriptor clarabel_DefaultSolver_f64_update_b_partial$descriptor() {
        return clarabel_DefaultSolver_f64_update_b_partial.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_b_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static MethodHandle clarabel_DefaultSolver_f64_update_b_partial$handle() {
        return clarabel_DefaultSolver_f64_update_b_partial.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_b_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static MemorySegment clarabel_DefaultSolver_f64_update_b_partial$address() {
        return clarabel_DefaultSolver_f64_update_b_partial.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void clarabel_DefaultSolver_f64_update_b_partial(ClarabelDefaultSolver_f64 *solver, const uintptr_t *index, const double *values, uintptr_t nvals)
     * }
     */
    public static void clarabel_DefaultSolver_f64_update_b_partial(MemorySegment solver, MemorySegment index, MemorySegment values, long nvals) {
        var mh$ = clarabel_DefaultSolver_f64_update_b_partial.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("clarabel_DefaultSolver_f64_update_b_partial", solver, index, values, nvals);
            }
            mh$.invokeExact(solver, index, values, nvals);
        } catch (Error | RuntimeException ex) {
           throw ex;
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }
}

